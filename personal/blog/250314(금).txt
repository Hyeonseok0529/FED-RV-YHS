// 2025_03_14 금요일

오늘은 비동기처리가 필요한 이유, C++라이브러리를 사용하는 이유 , 이벤트 루프와 콜백 개념정리를 해보겠다.
(유튜버 프론트맨님의 영상의 설명을 참고하였다.)

1. 비동기 처리는 왜 필요한가?
Javascript는 싱글 스레드 언어이다.

싱글 스레드 언어 : 한번에 하나의 작업만 처리할 수 있는 언어. 여러 작업을 동시에 수행하지 않고 순차적으로 하나씩 처리하는 언어를 뜻한다.

하나의 연산이 실행중이면, 쓰레드가 block되는 것이다.

쓰레드 : 프로그램 내에서 실제로 실행되는 흐름 , "쓰레드가 블록"되는 것은 스레드가 특정 작업을 완료할 때까지 다른 작업을 진행할 수 없는 상태를 의미한다.

현대 컴퓨터 성능에서 간단한 함수 실행에 의한 쓰레드 block은 체감하기 힘들지만, 네트워크 요청, DB Query, 파일 시스템 제어 등 시간이 오래 걸리는 작업도 있다.

이 세개의 작업의 경우는 I/O작업 (입출력 작업) 이라고 불리며, 외부 리소스와의 상호작용 때문에 오래 걸리게 된다.

이런 작업들이 메인 쓰레드를 블록하고 있으면, 심각한 자원 낭비와 사용성 저하로 이어질 수 있다. 따라서, 메인 쓰레드를 block하지 않고 이런 작업들을 수행할 수 있는 방안이 필요하다.

2. 비동기 작업이란 무엇인가?
자바스크립트 엔진은 긴 시간이 소요되는 작업들을 메인 쓰레드에서 처리하지 않는다. Node.js의 경우, libuv라는 C++ 라이브러리를 통해, 브라우저의 경우 Fetch와 같은 웹 API 를 통해 백그라운드에서 처리한다. 이렇게 자바스크립트의 메인 쓰레드가 아닌, 백그라운드에서 처리하는 작업을 "비동기 작업" 이라고 부른다.

3. 왜 C++ 라이브러리를 사용하는가?
그럼 백그라운드는 무엇이며 왜 자바스크립트를 실행하는데 C++ 라이브러리를 사용하는가?

이를 이해하기 위해 "자바스크립트" 와 "자바스크립트 실행 환경"을 구분하는 것이 중요하다. "자바스크립트 실행 환경"인 Node.js와 브라우저는 자바스크립트만으로 이루어져 있지 않다. 자바스크립트만으로 프로그램의 기본적인 흐름은 잡을 수 있지만, 한계가 있기 때문이다. 여기에는 single thread blocking 이슈를 비롯하여, 파일 시스템 접근 가능과 OS 수준의 작업이 자바스크립트만으로는 불가능하다는 문제도 있다.

이 한계를 보완하기 위해 자바스크립트 실행 환경 내에 자바스크립트로 접근 가능한 여러 기능들을 구현해놓은 것이다. (비동기 처리도 이 기능들 중 하나.) 집에 TV나 냉장고가 없다고 해서 사람이 살 수 없는 것은 아니지만, 있으면 편한 것과 같다. 여기서 자바스크립트의 메인쓰레드는 사람 , libuv나 웹 API를 가전에 비유할 수 있다.

4. Callback 함수란 무엇인가?
비동기 작업이 완료되었을 때 메인 쓰레드에서 실행할 함수

메인 쓰레드에서 비동기 함수를 만나면 실제 처리는 백그라운드에서 하게 된다. 메인 쓰레드가 요청한 작업이기 때문에 작업에 대한 결과를 알아야 한다. 메인 쓰레드는 결과에 따라 처리를 다르게 할 수 있다. 그래서 비동기 함수를 호출할 때, 처리 완료시 메인 쓰레드에서 실행할 함수를 함께 전달하는데 이를 Callback 함수라고 한다.

웬만한 비동기 함수들은 callback 함수를 인자로 받을 수 있게 설계되어 있고, 보통 마지막 인자로 전달하게끔 되어있어 각 함수별 스펙을 참고하면 된다.

5. 이벤트 루프의 필요성
callback 함수는 백그라운드로 잠시 전출간 메인 쓰레드 식구이다. 언젠간 메인 쓰레드 안으로 들어와야한다는 것이다. 그런데 메인 쓰레드와 백그라운드는 별도의 프로세스이기 때문에 callback 함수가 들어와야 하는 시점이 애매해질 수 있다. 메인 쓰레드에서 다른 연산이 진행중일 수 있기 때문이다. 따라서 callback 함수가 들어올 시점을 정해주는 체계의 역할을 담당하는 것이 Event loop 이다.

이벤트 루프의 필요성에 대해서는 다음 글에서 다뤄보도록 하겠다.

// 오늘의 회고

포트폴리오 페이지를 만들어보려고 하는데, tailwindCSS 를 사용해보고 싶어 환경구축에 나섰다.
스타일을 간편하게 설정할 수 있는 프레임워크여서 효과적으로 페이지를 개발할 수 있을 것 같다.

아직 명령어에 익숙하지 않은 터라 시간이 조금 걸리긴 했지만 큰 문제없이 설치는 완료했다. 주말이나 다음주 중에는 참고할 페이지들을 서칭해보고 구조를 정리해봐야겠다.

글에서는 이벤트 루프를 정리하고, 진행하고 있는 프로젝트에 대해 생각해보는 시간을 가져봐야겠다.