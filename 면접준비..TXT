1. 브라우저에서 프로그램이 실행되는 순서를 이야기해보세요.
- 많이 나오는 질문 중에 하나

2. DOM에 대해서 설명하세요.

3. 컨텐츠를 만들 때 회사의 링크로 가게 걸지 말고,
내가 만든 컨텐츠로 돌 수 있도록 만들기

4. 컨텐츠의 방향(ex. 스크롤 방향)이 데스크탑, 모바일에 최적화될 수 있도록 해야 함.

 5. 함수내에서 선언없이 변수를 사용하면 
    자동으로 전역변수로 등록되어 사용된다!
    편리한듯 보이지만 변수가 선언없이 전역이 됨으로
    변수관리에 혼잡성이 증가하여  코드관리가
    어려워지는 제 1원인을 제공한다.

    -> 왜 let, const가 등장했는지에 대한 이유가 된다.

6. var를 쓸떄는 중괄호를 기준으로 하지 않는다
7. let은 순서를 맞춰서 코딩할 수 있게 한다.

** 11월 마지막 주에 12월 된다고 말씀드리기? ㅋㅋ

8. 홈페이지 일관성
- 등장액션 : 메인 , 서브페이지도 등장액션이 비슷하면 통일성있고 좋음
- CSS 를 만들어놓고 하위에 다 적용될 수 있도록 하는 것이 잘 만든 것임
- 메뉴바 스타일은 어느정도 크기가 있어야 좋음.
  글씨가 너무 작으면 편의성도 떨어지고 가독성도 떨어짐

9. document.querySelectorAll의 특징!
 HTML컬렉션 (주머니)를 만든다.

10. 이름있는 함수는 세미콜론을 붙이면 안된다.
11. 함수에 소괄호를 붙이면 즉시 실행한다는 뜻이다.
    코드를 가지고만 있게 하는 거는 소괄호를 붙이지 않으면 된다.

12. let , const 는 중괄호 안이 "블록영역" 이다.

13. a 태그 안에 href가 핵심 "속성"
    img 태그 안에 src가 핵심 "속성"
    자바스크립트의 하는 일은 속성을 읽어오거나 셋팅하는 것
    
14. `` -> 템플릿 리터럴 : 니 있는 그대로 털어놔. 
    화면에 있는 그대로 출력하기 위한 장치

15. 어떤 코드를 반복실행하고 있을때는 그 코드를 for문으로 시,한,증으로 싸주면 된다.

16. 배열 : 묶음 DATA 처리메모리구역
17. 객체(Object) : 하나의 독립된 속성(명사적 특징)과 메서드(상태가 바뀌는 것 : 동사적 특징)
  객체지향적 : 단위별로 따로따로 만들어서 관리가 가능.

18. position: fixed;는 항상 보이는 화면이 기준이므로
부모를 물어볼 필요가 없다.

19. 장소 , 시간을 알아볼 수 있는 방법은 console.log 이다.

20. 자바스크립트에서 따옴표를 싸지 않은 문구는 "변수"이다.

21. 객체 : 속성과 메서드를 가지는 프로그램 단위체
절차적인 언어의 단위체 = 객체이다.
프로그램은 무언인가? : 소프트웨어적인 목적을 위해서 만들어진 "절차적인 언어"
결론을 내기 위해서 순서적으로 언어를 짰다는 것.

22. 객체 혹은 안에 있는 함수를 메서드라고 한다.
 속성과 메서드가 있는 것이 바로 객체이다.

23. onclick 메서드의 함수는 "한번" 밖에 할당할 수 없다.

24. 함수는 코드 저장소이기도 하지만, 리턴값을 가지고 돌아간다.
함수 : 특정실행코드를 담고 있는 메모리공간. 

25. ~의 프레임워크를 써보았는가?
=> ~가 짠 함수를 사용한 것 

26. 플렉스의 개념 , 옵션

* 회사 선택할 때는 반드시 교육이 있는 회사여야 한다.

[기술질문]
책 목차 2~3장 컴포넌트 JSX 문법 프랍스 스테이트 이벤트핸들링 돔 라이프사이클메서드 
react 책 1장 ~ 7장에 있는 내용들을 주로 물어본다
vue Js. 화면을 개발하기 위한 필수 단위 , 뷰 인스턴스의 정의와 속성 , 옵션은 뭐가 있는지
컴포넌트가 무언인지? 지역, 전역 컴포넌트의 차이? 통신 : 데이터 주고받기 
뷰 라우팅? 데이터 바인딩은 어떻게 하는지? 책 1~5장에 나와있는 내용
ex.6 자바스크립트 최신 버젼 문법

보통 교재 앞쪽에서 물어본다. 물어보는 목적은? 그것조차 답변하지 못하는 개발자는 채용하지 않겠다.
이기 때문에


[멘토링 내용]

하는 일
공공기관 입찰 - 인사정보기관 유지보수
  내부사업, 서울시 교육청 교육관련 it

SI - 외부기관 개발운영 및 경험

프로그램언어 
  Java 언어 주력 , python을 확장하려고 함.
  Java에 대한 프로젝트 70-80% 파이썬 늘어나고 있음.

  많은 프로젝트에서 리액트를 요구하고 있음.

  항상 데이터를 염두해야한다.
  데이터? 백에서 가져와서 화면에 노출시키는 역할
  기능을 개발해야 함.
  html, css를 통해서 화면을 만들었다는 표현은 가치가 없음.
    그래도 알고 있긴 해야 함.

  자바스크립트, 리액트, 뷰로 어떤 기능을 구축했다는 것을 어필해야 함.
  엑시오스 ? 
  에이젝스 ?
  로드? 넥스트 js?
  학원 커리큘럼 뿐만이 아니라 넓은 영역으로 볼 수 있어야 함.

  수료 이후에 만족하면 안됨.
  프론트엔드에 강점(자바스크립트 ,리액트)

  자바, C , 스프링 부트, 프레임워크에 대한 이해
  데이터베이스에 대한 공부를 해야한다.
  파이어베이스 익스프레스 JS

 질문 ) 백엔드에 대한 공부를 그럼 어떻게 주로 하는가?
 "데이터"를 반드시 기억해야한다.
 
////////////////////////////////////////////////////////////////

실무 현장에서 쓰는 요소들
- 포트폴리오에 포함시키기 바람.
- 경쟁자들과 차별점을 두어야 하는 부분을 인식

[프로젝트 과정]
프로젝트 시작 직전 2개월 : 고객사 , 수행사 협의 시작

8개월 - 분석설계
4개월 - 개발
2개월 - 테스트
이후 오픈

분석설계를 제대로 해야함. 그렇지 않으면 "몸이 갈려나감"
   내부사업, 서울시 교육청 교육관련 itex : 고객의 요구사항을 제대로 파악하지 않으면 계속 바뀜.

01. 프로젝트 사전준비

요구사항 설정/////////////////////////////////////////////////////////////////////////////
- 목표설정 
e 커머스 , 금융 , 물류&제조 , ERP 고객사에 따라 프로젝트의 목적이 설정됨.
목표를 명확하게 설정해야 함.

- 개발자다운 마인드 
결과, 수치, 객관적인 증거
사유를 이야기할 때도 무엇때문에 못했는지 정확하게 이야기해야 함.
모호하거나 정확하지 않는다면 평가가 좋지 않고, 신빙성이 떨어진다.
컴퓨터로 하는 업무이기 떄문

- 왜 그 목표를 설정했는가? "기획의도"
사전에 구체적인 증거(수치) : 통계 , 보도자료 , 뉴스
ex 캠핑 쇼핑몰 : 캠핑에 수요가 늘어났다는 자료가 필요함. / "그렇다더라"는 안된다.
나중에 프로젝트 발표해야 함.

- 요구사항 수집 및 분석
이것만 개발기간 중 4개월 차지.
요구사항 : 고객이 원하는 것.
그렇다고 고객들이 원하는 것을 무조건 수용할 수 없다.
요구사항 중에서는 현실성이 떨어지는 것도 있다. 그럼 어떻게 해야하는가?
현실적으로 가능 불가능 판단, 조율 해야 함 . 왜 안되는지 설명
객관적인 증거 , 레퍼런스 , 타사의 자료를 보여주고 -> 기간 , 돈을 가지고 협상해야한다.

요구사항이 웬만하면 바뀌지 않게 하는 것도 PL? 의 목표이다
기능적 & 비기능적 요구사항이 있음

*비기능적 요구사항 : 보안, 사용자들이 당연히 보이지 않는 영역에서 깔려있는 베이스? , 인증 시스템 등등
로딩바가 넘어가는 시간이 길어지는 경우 : 버퍼링 (데이터를 들고 나오는 과정이 길어지는 것임) -> 성능

- 요구사항에 대한 부분을 문서화 시켜야한다.
  가상 고객 설정 : 문서화 -> 포트폴리오 한장에 올려야 함.
  그러면 체계성이 담기게 되어 장점이 생긴다.
  산출물을 반영해주면 된다.

  많은 교육생들이 그렇게 하지 않는다.
  시간과 노력이 필요한 부분.
  개발 기간안에 과정에 매몰되면 안된다.

- 기술스택 산정
내가 할 수 있는 언어, 기능 등
한발 더 나아간다면 기획서(요구사항), 개발환경 구축 가이드(데이터베이스, 프로그램버전, 상태관리 등등 .. ),


프로젝트 계획 및 일정관리 ///////////////////////////////////////////////////////////////////
"개발 일정표"

체계석 , 신빙성을 돋보이게 할 수 있는 요소들
계획 세우고 추진
무계획 추친은 크게 다르다.

맡은 파트 , 단위별로 나누고 , 담당자, 납기일 설정(데드라인) , 진척도(퍼센트)
** 주마다 1회~2회 정기회의를 한다. 전체 개발자와 PM(팀장?) 개발자마다 진척도 , 성취도 평가? 피드백?
엄청 차가운 현장
납기일 안에 퍼포먼스를 반드시 내는 습관을 길러야 한다.
개발자는 워라벨을 하면 안된다.
1인분은 최소 3년의 시간이 필요함.

[초급 개발자 주의사항]
초급개발자는 문서, 회의에서의 디렉션이 아니라 : 구두로만 진행되는 요청이 있다. 매우 조심해야 함.
구두로 넘어오는 것들은 내가 못하는 영역일 가능성이 매우 높다. 떠넘기는 경우가 많음.

문제가 일어났을 때 나에게 책임이 넘어온다. => 반드시 기록을 남겨야 한다.
기록 남기는 법 : 카톡이나 커뮤니케이션 프로그램 : 구두로 뭔가를 받으면 
이 업무에 대해서 이렇게 이렇게 하는게 맞죠? 라고 되물어야 함. 녹음을 하거나
PL , PM 에게 상담해봐도 된다. 내가 하는게 맞는가? 내가 하는 분량이 맞는가?를 판단해야 함.

제일 좋은 방법은 윗 상사에게 가서 물어봐야 한다. 이런 업무를 받았는데 힘든 상황을 "정확하게"이야기 해야 함
하루 이틀 해보고 어떤 과정에서 뭐가 자꾸 문제가 발생하는데 어떤 부분이 힘든지 윗 사람이 인지할 수 있도록
인지해야 함.

초급 개발자는 UI 를 주로 담당한다.
UI : 화면에 보이는 버튼의 구성이나 색감 등
사용자들이 사용하면서 느끼는 감정이 UX 얼마나 편리한가?

페이지를 만들고 구성할 때 UI,UX 를 고려

화면 기획서 ///////////////////////////////////////////////////////////////////////////////
요구사항을 반영한 화면

02. 프로젝트 진행
개발 4개월 정도가 정상적(잘 지켜지진 않음) ~ 6개월 
개발 이후 소스 품질보장
단위테스트(1개월)는 자신이 테스트 , 테스터들이 들어와서 테스트하기도 함.
통합테스트(2개월)을 진행.
최종적으로 서버에 결과물을 반영하고 배포 
  - 보통 이 시기에 야근이 많음.
  - 이슈에 대한 대응을 해야하기 때문

개인의 실력을 올리고 싶다면 
오류에 대해서 무엇이 문제인지, 어떻게 해결했는지를 기록으로 남기는 것이 좋음. 
블로그
내가 지금 겪는 오류가 현장에서 똑같이 나온다. 최대한 오류를 많이 , 빨리 잡아내보는 것이 필요하다.


03. 프로젝트 사후관리
  





//////////////////////////////////////////실제 기획서, 양식/////////////////////////////////////
 30억 ~ 50억 프로젝트
 프로젝트 안에도 소규모 프로젝트가 여러개 있음

PPT 300~500 페이지 정도
PC 와 앱은 하이브리드 웹&앱 PC에서 보여지는 네이버 , 스마트폰 네이버 화면.
개발한 것이 웹과 앱에서 다 실행할 수 있는 것 

웹을 개발하고 나면, 하이브리드 앱을 개발하는 것은 그렇게 오래 걸리지 않음.
요즘에는 하이브리드를 원하는 경우가 많음.

프론트엔드 개발자에게 들어오는 질문인 모바일 경험은
모바일 경험은 하이브리드 웹&앱을 물어보는 것임. " 모바일 화면 만들어봤니? "

개발자 : 실력 여하에 따라 대우가 달라진다(연봉 등)
3년 이후 , 앱(스위프트, 안드로이드 스튜디오)  (리액트네이티브) 를 신경써보자 배워보자.
지금은 선택과 집중. 앱까지 다룰 수 있는 개발자가 되자.

프로젝트 계획서 ///////////////////////////////////////////////

개발 일정표
단계를 크게 나누고 작은 단위로 쪼개서 표기 / 작업자 / 시작일 / 종료일 / 작업기간(일) / 달성률(%) / 일자 나열 후 시작일자 체크, 체크하면 그 기한 안에 끝내야 한다.
기한내에 못하면 하루이틀 줄 수는 있다. 하지만 기한 내에 끝내야 하는 습관을 꼭 길러야 함.
"체계적으로"
진행중 , 개발완료 색깔 표기

내 파트에 대한 코드가 있고(코드를 만들 필요는 없음), 요구사항이 있음.
요구사항 : 구현하고자 하는 기능 ->  

요구사항 구분(코드)/ "요구사항" / 기능구분 / *****기능정의***** / 상세설명 / 필수데이터 / 선택데이터
기능정의란? : 로그인기능 안에 있는 기본로그인 소셜로그인 아이디 찾기 비밀번호 재설정 등등
상세설명도 해야 함 : 로그인 필수(비회원은 볼 수 없다는 말임) / 
왜 코드로 이야기하나? 상세설명을 코드로 하기 떄문

ex. 회원정보 수정 / 이름 , 생년월일,성별,전화번호 변경 불가 / 선택데이터 : 프로필사진, 이메일, 현재주소, 아이디, 비밀번호, 회원가입일

주소 : 도로명주소API를 연동하여 가져온 데이터를 기반 시도군구동면리명칭으로 위치 주소 노출 건물명으로 위치 주소 노출

수정을 해야한다면 빨간 중앙선 긋고, 수정날짜를 적어주고, 어떤 것이 수정이 되었는지 알려주어야 함.
그래야 전문적으로 보일 수 있다.

산출물이 나오는 것이 제일 중요하긴 함. 요즘엔 산출물의 수준이 거의 비슷하기 때문에 실무적으로 배웠다는 것을 어필해야 한다.


[필수적으로 해야하는 문서!]
-요구사항 정의서
-프로젝트 계획서 
-화면 기획서 

개발을 하다보면 시간에 쫓긴다. 그럼 선택과 집중을 해야하는데, 시간적인 여유가 되지 않는다면
한 두개를 지정한 다음에 기획서를 작성해보기.. 


[질문]

1. 새로운 언어, JAVA 등 에대한 공부 경로
2. 연봉, 연봉협상에 대한 접근
- 호황은 아님 불황
- 상관없이 채용을 하긴 하지만, 기준이 높아짐
- it만큼 채용하는 직군은 없을 것임.
- 개발에 대한 수요는 계속 나오기 때문
- 검증 기준을 재적립하기 시작함.
- 비전은 있다.

그렇다면 연봉은 ? 
- 학력 , 자격증 
진입할때만 영향이 있고, 그 이후부터는 개발실력이 문제임.
그렇다면 왜 ? 등급 산정때문에 그렇다.
초급 개발자가 받을 수 있는 연봉은 한정되어있다.
학사에 정처기 자격증이 있다면 4년 후에 중급개발자 가능

진입한 이후부터는 개발실력이 크게 좌우된다.
대기업, 중견, 중소 마찬가지임.
중급 개발자로 가더라도 상여,성과금이 다름

네카라쿠배
-> 검증된 인원으로 줄임.

1년에 1-2번 뽑는 직군이 달라짐.
그럼 어떻게 해야하는가?

전공자에 대한 시각에 차이가 있음
(개발실력과는 별개로)
특정 기업에서 뽑을 때 전공자만 뽑는 경우가 있다.
비전공자라고 하더라도 공학전공은 추가로 달아라.
학점은행제 "컴공" 1년 반정도 빡세게 투자하면 컴공 딸 수 있음.

정처기 자격요건 되면 무조건 기능사
연봉 보통 
대기업 3500 정도 시작(a+ 해서 4000정도)
중견 3300~3400 복지 차이
중소 3000 이상

서버쪽으로 어떤 정보를 보내야하는가?
백엔드 소스를 보고 , 백엔드의 구축된 요소들을 볼 수 있어야 
화면을 보면 어떤 데이터를 노출시켜야하는지 알 수 있어야 함.
페이지와 관련된 데이터베이스를 파악할 수 있어야 함.

데이터 관리능력

JAVA , 새로운 언어 추천하시는 경로?
데이터 베이스 

스프링 부트 심도있게 공부할 필요는 없는데
스프링부트를 쓰지 않는 영역이 있기 때문 
5년차 이상부터
4개의 개념
엑시오스
에이젝스

컨트롤러 /서비스 인터페이스 /서비스 인폴 /DAO
SQL 
쿼리 ..

서점 
스프링 부트 책

책sql 튜닝
생활코딩 
JAVA 교재 , 인강 등 CRUD 글쓰기 게시판


3. 기획서를 만드는 프로그램은 ? 
엑셀로 많이 만듦
PPT 

공공기관 : 한글
4. 발사믹 -> 와이어프레임 

리뉴얼 : 어느부분이 불편해서 어느 부분을 업데이트 했다.
메신저로 보통 슬렉,플로우을 많이 씀 , 노션 , 지라 , git 형상관리
슬렉 : 대놓고 협업 툴 , 업무관리 , 프로젝트 관리일정 , 진척도 셋팅

좋은 채용 공고의 기준
대기업, 중견(100억 매출 이상)은 어느정도 체계가
중소 
가지말아야할 곳 
- 4대보험 , 퇴직금(퇴직연금을 운용하고 있는지)
- 퇴직 연금을 하겠다는 곳은 지켜보면 됨.
  구체적으로 언제 하겠다고 나와야 함.
  회사가 망해도 퇴직금을 가져갈 수 있기 때문

- 채용조건이 거의 비슷 
- 연봉기준 산정 , 체계적으로 , 시스템적으로 하는 곳들을 잘 봐야함.
- 진입했을 때 연봉에 대한 기준이 잡혀있는 듯 한 기업에서

- 잡플래닛 평가 , 평판 , 평점
- 맹신할 필요가 없음. 거의 대부분은 악감정을 품고 적기 때문

- 들어가서 대표이사, 직원, 관리직들간의 관계 : 기업문화
기업문화가 어떤지 봐야 함.
대표이사가 직원들에 대해서 어떻게 생각하는지 마인드 체크
선임개발자 10명중 10명이 안좋다고 생각하면 런해야하는데,
경력 커리어는 빠르게 쌓아야 함.

- 면접할때도 퇴직연금, 4대보험 질문해도 된다.
- 1~2년은 버텨라

빨리 어디든 들어가라. 납기일 맞추고 , 성실하게, 근면하게
이직제안을 받고 가는 것이 가장 좋다.
골라서 가는 거 생각하지 말고 , 커리어를 빨리 쌓을 수 있는 지점을 찾아야 함.

