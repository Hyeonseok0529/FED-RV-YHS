// 2025_03_11 화요일

오늘은 DOM에 대한 개념정리를 해보려고 한다.
(유튜브 프론트맨님의 영상의 설명을 그대로 참고하였다.)

1. DOM의 개념
Document Object Model

DOM 이란 HTML과 XML과 같은 마크업 언어로 작성된 문서에
자바스크립트와 같은 프로그래밍 언어가 문서에 접근하고
조작할 수 있도록 하는 인터페이스를 뜻한다.

DOM은 계층적 구조를 가진 노드트리로 구성된다.
??노드트리?? 이건 뭐지
=> 노드트리(Node Tree)는 트리(Tree) 구조로 연결된 노드(Node) 들의 집합을 의미한다.

그렇다면 노드는 무엇이고 트리는 무엇이란 말인가 ..
=> 트리는 계층적인 구조를 가지는 자료구조로, 하나의 루트노트(Root Node)에서 시작해 여러 개의 자식 노드(Chil)로 분기된다.

=> 노드는 트리의 개별 요소로, 데이터를 저장하며 다른 노드와 연결된다.

그래서 노드 트리는 노드들이 트리 구조로 연결된 형태를 의미하게 되는 것.

2. DOM이 필요한 이유
동적인 웹 페이지를 구현하려면 자바스크립트와 같은 프로그래밍 언어가 문서에 접근하고 제어할 수 있는 수단이 있어야 하는데, 마크업 언어로 작성된 문서에는 이러한 수단이 없다.

티비는 있지만, 티비를 조작할 수 있는 리모콘이 없는 것과 같은 이치라고 볼 수 있다.

따라서 문서에 접근하고 제어할 수 있는 수단인 DOM이 필요하다.
다시말해, DOM이 수단으로 문서에 접근하고 제어할 수 있게 되는 것.

3. DOM으로 어떤 동작을 할 수 있는가?
버튼 요소가 클릭되었을 때, 특정 함수를 호출 하도록 이벤트 핸들러를 추가할 수 있고, 웹 페이지 내에 새로운 요소를 추가하거나, 삭제, 수정할 수 있다.

4. DOM은 왜 계층적 구조로 표현하는가?
계층적 구조에서는 노드들 간의 관계가 부모, 자식, 형제 등으로 명확하게 정의된다. 이는 노드의 추가, 제거, 이동 작업을 쉽게 할 수 있도록 도와준다. 또한 이벤트가 발생한 요소로부터 이벤트가 올라가는 이벤트 버블링, 반대로 이벤트가 내려가는 이벤트 캡처링 동작은 계층적 구조에서 효율적으로 동작하기 때문에 DOM을 계층적 구조로 표현하는 것이다.

// 오늘의 회고
DOM은 기초중에 기초라고 생각하지만 막상 말로 표현하려고 하니 아직은 입에 붙지 않는다. 몇 일 영상을 보면서 계속 복습중이다. 바보인 듯 하나 그래도 단어가 하나씩 들어오는 것 보니 언젠가는 DOM에 대한 개념이 자연스럽게 튀어나올 날이 오기는 하려나보다.

툭 하면 튀어나야할 개념들이 아직은 산더미이지만 그 산더미를 한번 등반해보면서 그 속에 있는 단어들에도 더 친해지고 싶다. 시간이 된다면 설명에 있는 단어들도 더 풀어서 써봐야겠다.

오늘은 팀 프로젝트 마이페이지 작업을 했다. 마이페이지 데이터바인딩을 마무리? 하는 시점에 있는데 로컬스토리지와 세션스토리지를 같이 사용하고 있는데다가 아직 데이터베이스에 대한 개념도 잘 잡혀있는 것 같지 않아 데이터 설계나 데이터를 다루는 솜씨가 .. 처참하다.

진짜 운이 좋은 건 국비 교육을 같이 듣는 동안 컴공 친구한테 조언을 구할 수 있다는 것이다. 우선 프로젝트를 잘 마무리하는 것도 좋은데 지금 다루고 있는 데이터 흐름이나 설계 등등 조언을 구해야할 것 같다. 그 친구가 하는 말이나 생각을 보면 참 수학적 사고나 컴공의 사고를 나도 닮아가야겠다는 생각을 한다. 갈 길이 멀다.

그래도 하나씩 채워가는 재미가 있는 것 같다.

내일도 개념 하나와 내일의 회고를 이어가보겠다.